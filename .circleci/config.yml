version: 2.1
orbs:
  ruby: cimg/ruby@3.1.6
  docker: circleci/docker@2.6.0

jobs:
  release:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:$CI_UTILS_IMG_TAG
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_REPO: library/psulib_traject
      GITHUB_USER: 'psu-stewardship-bot'
    steps:
      - add_ssh_keys
      - run:
          name: "Release"
          command: |
            /usr/local/bin/tag-image

  publish:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:$CI_UTILS_IMG_TAG
        user: root
    steps:
      - setup_remote_docker
          docker_layer_caching: true
      - checkout
      - docker/check:
          registry: harbor.k8s.libraries.psu.edu
      - docker/build:
          image: library/psulib_traject
          registry: harbor.k8s.libraries.psu.edu
      - docker/push:
          digest-path: /tmp/digest.txt
          image: library/psulib_traject
          registry: harbor.k8s.libraries.psu.edu
  test:
    docker:
      - image: cimg/ruby:3.1.2
      - image: redis:5.0.7
    steps:
      - checkout
      - run:
          name: "Wait for Redis"
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Install Gems
          command: |
            gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
            bundle install
      - run:
          name: Linting
          command: bundle exec rubocop
      - run:
          name: RSpec
          command: |
            export REDIS_URL=redis://localhost:6379/1
            bundle exec rspec
      - run:
          name: Upload Coverage
          when: on_success
          command: |
            wget -q https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 -O cc-test-reporter
            chmod 755 cc-test-reporter
            export TAG=${CIRCLE_SHA1}
            export GIT_COMMIT_SHA=$CIRCLE_SHA1
            export GIT_BRANCH=$CIRCLE_BRANCH
            export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
            ./cc-test-reporter after-build -d

workflows:
  version: 2
  blacklight:
    jobs:
      - release:
          context: org-global
          name: "Release Image"
          filters:
            tags:
              only:
                - /^v\d+.\d+.\d+.*/
            branches:
              ignore:
                - /.*/
      - test:
          context: org-global
      - publish:
          context: org-global
